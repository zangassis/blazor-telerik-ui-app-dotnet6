@page "/CreateProduct"
@using ProductCatalog.Data
@using ProductCatalog.Services
@using Telerik.Blazor
@using Telerik.Blazor.Components
@inject ProductService productService
@inject NavigationManager NavigationManager

@page "/form/overview"

<div class="form-section">
    @if (ValidSubmit)
    {
        <div class="success-alert">
            <p>The form was submitted successfully.</p>
        </div>
    }
    else
    {
        <TelerikForm Model="@ProductEntity"
                 OnValidSubmit="@HandleValidSubmit"
                 OnInvalidSubmit="@HandleInvalidSubmit">
            <FormValidation>
                <DataAnnotationsValidator></DataAnnotationsValidator>
            </FormValidation>
            <FormItems>
                <FormItem Field="@nameof(ProductDto.Displayname)"></FormItem>
                <FormItem Field="@nameof(ProductDto.Brand)"></FormItem>
                <FormItem Field="@nameof(ProductDto.Price)"></FormItem>
                <FormItem Field="@nameof(ProductDto.Category)"></FormItem>
            </FormItems>
        </TelerikForm>
    }
</div>

@code {
    public bool ValidSubmit { get; set; } = false;
    public ProductDto ProductEntity = new ProductDto();

    protected async void HandleValidSubmit()
    {
        ValidSubmit = true;

        productService.CreateProduct(ProductEntity);
        await Task.Delay(2000);

        ValidSubmit = false;

        StateHasChanged();
    }

    void HandleInvalidSubmit()
    {
        ValidSubmit = false;
    }
}

<style>
    .form-section {
        margin: 0 auto;
        padding: 3em;
        border: 1px solid rgba(20,53,80,0.14);
        box-shadow: 0 1px 2px 1px rgb(0 0 0 / 8%), 0 3px 6px rgb(0 0 0 / 8%);
    }
    .success-alert {
      padding: 20px;
      background-color: green;
      color: white;
      margin-bottom: 15px;
    }
</style>
